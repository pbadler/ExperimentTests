# calculate predictive variance
V.pred[k] = Gpars$sigma2.a[doSpp]*exp(Gpars$sigma2.b[doSpp]*plants$logarea.pred[k])
V.pred.trt[k] = Gpars$sigma2.a[doSpp]*exp(Gpars$sigma2.b[doSpp]*plants$logarea.pred.trt[k])
# size specific correction for Jensen's inequality
resid.Pred <- sqrt(V.pred[k])*scaledResiduals[[doSpp]]
newJensen <- mean(exp(resid.Pred))
resid.Pred.trt <- sqrt(V.pred.trt[k])*scaledResiduals[[doSpp]]
newJensen.trt <- mean(exp(resid.Pred.trt))
# multiply predicted size by survival probability to get expected area using new (size specific) Jensen's correction
plants$area.pred[k] <- plants$surv.prob[k]*exp(plants$logarea.pred[k])*newJensen
plants$area.pred.trt[k] <- plants$surv.prob.trt[k]*exp(plants$logarea.pred.trt[k])*newJensen.trt
}
head(plants)
# call all scripts for removal experiment analysis
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
library(texreg) # to save output
library(xtable)
library(lme4)
library(INLA)
dists <- read.csv(paste0(root,"/ExperimentTests/data/idaho/speciesdata/IdahoDistanceWeights.csv"))
setwd("growth")
source("write_params.r") # get function to format and output parameters
iSpp="ARTR"
source(paste0(iSpp,"growth.r"))
sppList
# call all scripts for removal experiment analysis
rm(list=ls(all=TRUE))
graphics.off();
root=ifelse(.Platform$OS.type=="windows","c:/Repos","~/repos"); # modify as needed
setwd(paste(root,"/ExperimentTests/removals/",sep="")); # modify as needed
sppList <-  c("ARTR","HECO","POSE","PSSP")
dists <- read.csv(paste0(root,"/ExperimentTests/data/idaho/speciesdata/IdahoDistanceWeights.csv"))
max.CI <- F  # TRUE means use maximum removal effect
source("ibm/ibm_removal_1step.r")
getwd()
tmpD <- read.csvi=1
i=1
obs.plant.size <- NULL
doSpp<-sppList[i]
tmpD <- read.csv(paste0,"growth/",doSpp,"_growth.csv")
tmpD <- read.csv(paste0("growth/",doSpp,"_growth.csv"),header=T)
head(tmpD)
dataDir2
tmpD <- read.csv(paste0(dataDir2,"/speciesData/",doSpp,"/",doSpp,"growDnoNA.csv"),header=T)
tmpD <- read.csv(paste0(dataDir2,"/speciesData/",doSpp,"/growDnoNA.csv"),header=T)
head(tmpD)
head(plants)
# Predict survival and growth of each plant and recruitment in each quadrat*year
# PBA 5/25/2016
outfile=ifelse(max.CI==F,"ibm/simulations1step/ObsPred_1step.csv","ibm/simulations1step/ObsPred_1step_maxCI.csv")
# FORMAT PARAMETERS ------------------------------------------------
Nspp=length(sppList)
curDir <- getwd()
Nyrs <- 31
# set up survival parameters and function
source("survival/import2ibm_1step.r")
# set up growth parameters and function
source("growth/import2ibm_1step.r")
# set up recruitment parameters and function
source("recruitment/import2ibm_1step.r")
setwd(curDir)
# FUNCTIONS---------------------------------------------------------
library(boot)
library(mvtnorm)
library(msm)
source("survival/fetchSurvData.r")
# GET OBSERVED DATA  -------------------------------------------
Nspp=length(sppList)
plants=NULL
neighborList <- c("ARTR","HECO","POSE","PSSP","allcov","allpts")
dists$allcov <- rowMeans(dists[,1:4])  # for "other" polygons use average of big 4
dists$allpts <- dists$POSE  # set forb dist wts = smallest grass (POSE)
dataDir2 <- paste(root,"/ExperimentTests/data/idaho_modern",sep="")
scaledResiduals <- list(4)
for(i in 1:length(sppList)){
doSpp <- sppList[i]
D2 <- fetchSdat(doSpp=doSpp,speciesList=neighborList,datadir=dataDir2,distWts=dists)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment")]
D2 <- merge(D2,tmp, all.x=T)
# drop rainfall treatment plots
ii <- which(D2$Treatment=="Drought" | D2$Treatment=="Irrigation")
D2 <- D2[-ii,]
# account for removal in baseline years and take out removed plants
if(doSpp!="ARTR"){
ii <- which(D2$year>=2011 & D2$Treatment=="No_shrub")
D2$W.ARTR[ii] <- 0
ii <- which(D2$Treatment=="No_grass")
D2<-D2[-ii,]
}else{
ii <- which(D2$year>=2011 & D2$Treatment=="No_grass")
D2$W.HECO[ii] <- 0 ; D2$W.POSE[ii] <- 0 ; D2$W.PSSP[ii] <- 0
ii <- which(D2$Treatment=="No_shrub")
D2<-D2[-ii,]
}
D2$area <- exp(D2$logarea)
D2$doSpp <- doSpp
D2 <- subset(D2,year>2010)
plants <- rbind(plants,D2)
# read in scaled residuals
tmp <- read.csv(paste0("growth/",doSpp,"_scaled_residuals.csv"),header=T)
scaledResiduals[[i]] <- tmp$x
}
# get quadrat group and treatment
quad.info <- unique(plants[,c("quad","Group","Treatment")],MARGIN=2)
# merge in quad codes
tmp<-data.frame(Group=c("E1","P1","P10E1","P1E1","P2","P7E1"),GroupCode=c(1:6))
quad.info <- merge(quad.info,tmp)
# add GroupCode to plants data frame too
plants <- merge(plants,tmp)
# aggregate to quadrat and year
cov.obs <- aggregate(plants$area,by=list(species=plants$doSpp,quad=plants$quad,year=plants$year),FUN=sum)
names(cov.obs)[4] <- "obs"
cov.obs$obs <- cov.obs$obs/100 # convert to % cover
cov.obs <- reshape(cov.obs,idvar=c("quad","year"),direction="wide",timevar="species")
cov.obs[is.na(cov.obs)] <- 0
cov.obs <- cov.obs[,c(1,2,6,3,4,5)] # reorder columns
# get 2016 quadrat cover totals (these are not in the survival data file)
tmp <- read.csv("QuadYearCover.csv")
tmp <- subset(tmp, year==2016)
# set removed spp to zero
tmp$cover[tmp$species=="Artemisia tripartita" & tmp$Treatment=="No_shrub"] <- 0
tmp$cover[tmp$species!="Artemisia tripartita" & tmp$Treatment=="No_grass"] <- 0
tmp <- tmp[,c("quad","year","species","cover")] # drop Treatment and Group columns
tmp <- reshape(tmp, idvar=c("quad","year"),timevar="species",direction="wide")
names(tmp) <- names(cov.obs)
cov.obs <-rbind(cov.obs,tmp)
# GET PREDICTIONS -------------------------------------------------------
plants=subset(plants,survives==1) # only do for surviving plants
# SURVIVAL AND GROWTH
plants$surv.prob <- plants$surv.prob.trt <- NA
plants$logarea.pred <- plants$logarea.pred.trt <- NA
W.index <- grep("W.",names(plants))
V.pred <- V.pred.trt <- numeric(NROW(plants))
for(k in 1:dim(plants)[1]){
doYr <- which(Spars$yrList==plants$year[k])
doSpp <- which(sppList==plants$species[k])
#ignore treatment effects
plants$surv.prob[k]=survive(Spars,doSpp=doSpp,doGroup=plants$GroupCode[k],
doYear=doYr,sizes=plants$logarea[k],crowding=plants[k,W.index],Treatment="Control")
plants$logarea.pred[k] <- grow(Gpars,doSpp=doSpp,doGroup=plants$GroupCode[k],
doYear=doYr,sizes=plants$logarea[k],crowding=plants[k,W.index],Treatment="Control")
#use treatment effects when appropriate
plants$surv.prob.trt[k]=survive(Spars,doSpp=doSpp,doGroup=plants$GroupCode[k],
doYear=doYr,sizes=plants$logarea[k],crowding=plants[k,W.index],Treatment=plants$Treatment[k])
plants$logarea.pred.trt[k] <- grow(Gpars,doSpp=doSpp,doGroup=plants$GroupCode[k],
doYear=doYr,sizes=plants$logarea[k],crowding=plants[k,W.index],Treatment=plants$Treatment[k])
# The next two chunks (predictive variance and scaled residuals) are to correct for
# the effect of Jensen's inequality on predicted growth
# calculate predictive variance
V.pred[k] = Gpars$sigma2.a[doSpp]*exp(Gpars$sigma2.b[doSpp]*plants$logarea.pred[k])
V.pred.trt[k] = Gpars$sigma2.a[doSpp]*exp(Gpars$sigma2.b[doSpp]*plants$logarea.pred.trt[k])
# size specific correction for Jensen's inequality
resid.Pred <- sqrt(V.pred[k])*scaledResiduals[[doSpp]]
newJensen <- mean(exp(resid.Pred))
resid.Pred.trt <- sqrt(V.pred.trt[k])*scaledResiduals[[doSpp]]
newJensen.trt <- mean(exp(resid.Pred.trt))
# multiply predicted size by survival probability to get expected area using new (size specific) Jensen's correction
plants$area.pred[k] <- plants$surv.prob[k]*exp(plants$logarea.pred[k])*newJensen
plants$area.pred.trt[k] <- plants$surv.prob.trt[k]*exp(plants$logarea.pred.trt[k])*newJensen.trt
}
# # multiply predicted size by survival probability to get expected area (old Jensen's correction)
# plants$area.pred <- plants$surv.prob*exp(plants$logarea.pred + V.pred/2)
# plants$area.pred.trt <- plants$surv.prob.trt*exp(plants$logarea.pred.trt+V.pred.trt/2)
# aggregate predicted area to quadrat level
cov.pred <- aggregate(plants[,c("area.pred","area.pred.trt")],by=list(species=plants$doSpp,quad=plants$quad,year=plants$year),FUN=sum)
names(cov.pred)[4:5] <- c("pred","pred.trt")
cov.pred[,4:5] <- cov.pred[,4:5]/100 # convert to % cover
cov.pred <- reshape(cov.pred,idvar=c("quad","year"),direction="wide",timevar="species")
cov.pred[is.na(cov.pred)] <- 0
# RECRUITMENT
# loop through observed cover matrix
out.recruit <- out.recruit.trt <- data.frame(quad=cov.obs$quad,year=as.numeric(cov.obs$year),matrix(NA,dim(cov.obs)[1],4))
names(out.recruit)[3:6] <- sppList
names(out.recruit.trt)[3:6] <- sppList
out.recruit <- subset(out.recruit,year<2016); out.recruit.trt <- subset(out.recruit.trt,year<2016)
for(k in 1:dim(out.recruit)[1]){
totArea <- cov.obs[which(cov.obs$year==out.recruit$year[k] & cov.obs$quad==out.recruit$quad[k]),3:6]
doYr<- which(Spars$yrList==cov.obs$year[k])
qI <- which(quad.info$quad==cov.obs$quad[k])
doGroup <- quad.info$GroupCode[qI]
Trt <- quad.info$Treatment[qI]
# no treatment effects
out.recruit[k,3:6]=recruit(Rpars,totArea=as.numeric(cov.obs[k,3:6]),
doGroup=doGroup,doYear=doYr,Treatment="Control")
# with trtEffects as appropriate
out.recruit.trt[k,3:6]=recruit(Rpars,totArea=as.numeric(cov.obs[k,3:6]),
doGroup=doGroup,doYear=doYr,Treatment=Trt)
} # next k
# ADD RECRUIT COVER TO SURVIVAL*GROWTH COVER
#reorder columns
tmp <- sort(names(cov.pred)[3:NCOL(cov.pred)],index.return=T)$ix
cov.pred <- cov.pred[,c(1,2,(2+tmp))]
# make sure rows are ordered
cov.pred <- cov.pred[order(cov.pred$quad,cov.pred$year),]
out.recruit <- out.recruit[order(out.recruit$quad,out.recruit$year),]
out.recruit.trt <- out.recruit.trt[order(out.recruit.trt$quad,out.recruit.trt$year),]
#cbind(cov.pred[,c(1,2)],out.recruit[,c(1,2)],out.recruit.trt[,c(1,2)]) # check rows
# now add together
#cov.pred[,3:6] <- cov.pred[,3:6] + out.recruit[,c(3:6)]
#cov.pred[,7:10] <- cov.pred[,7:10] + out.recruit.trt[,c(3:6)]
# FORMAT OUTPUT -------------------------------------------------------
# merge observed and predicted cover
cov.pred$year <- cov.pred$year + 1
output <- merge(cov.obs,cov.pred,all=T)
# add in quad.info
output <- merge(output,quad.info)
head(plants)
## plot plant level predictions
# import growth data sets
obs.plant.size <- NULL
for(i in 1:length(sppList)){
doSpp<-sppList[i]
tmpD <- read.csv(paste0(dataDir2,"/speciesData/",doSpp,"/growDnoNA.csv"),header=T)
tmpD<-tmpD[,c("quad","year","trackID","area.t1")]
tmpD$species<-doSpp
if(i==1){
obs.plant.size<-tmpD
}else{
obs.plant.size<-rbind(obs.plant.size,tmpD)
}
} # next i
dim(obs.plant.size)
dim(plants)
# Predict survival and growth of each plant and recruitment in each quadrat*year
# PBA 5/25/2016
outfile=ifelse(max.CI==F,"ibm/simulations1step/ObsPred_1step.csv","ibm/simulations1step/ObsPred_1step_maxCI.csv")
# FORMAT PARAMETERS ------------------------------------------------
Nspp=length(sppList)
curDir <- getwd()
Nyrs <- 31
# set up survival parameters and function
source("survival/import2ibm_1step.r")
# set up growth parameters and function
source("growth/import2ibm_1step.r")
# set up recruitment parameters and function
source("recruitment/import2ibm_1step.r")
setwd(curDir)
# FUNCTIONS---------------------------------------------------------
library(boot)
library(mvtnorm)
library(msm)
source("survival/fetchSurvData.r")
# GET OBSERVED DATA  -------------------------------------------
Nspp=length(sppList)
plants=NULL
neighborList <- c("ARTR","HECO","POSE","PSSP","allcov","allpts")
dists$allcov <- rowMeans(dists[,1:4])  # for "other" polygons use average of big 4
dists$allpts <- dists$POSE  # set forb dist wts = smallest grass (POSE)
dataDir2 <- paste(root,"/ExperimentTests/data/idaho_modern",sep="")
scaledResiduals <- list(4)
for(i in 1:length(sppList)){
doSpp <- sppList[i]
D2 <- fetchSdat(doSpp=doSpp,speciesList=neighborList,datadir=dataDir2,distWts=dists)
# merge in treatment data
tmp <- read.csv(paste(dataDir2,"/quad_info.csv",sep=""))
tmp <- tmp[,c("quad","Treatment")]
D2 <- merge(D2,tmp, all.x=T)
# drop rainfall treatment plots
ii <- which(D2$Treatment=="Drought" | D2$Treatment=="Irrigation")
D2 <- D2[-ii,]
# account for removal in baseline years and take out removed plants
if(doSpp!="ARTR"){
ii <- which(D2$year>=2011 & D2$Treatment=="No_shrub")
D2$W.ARTR[ii] <- 0
ii <- which(D2$Treatment=="No_grass")
D2<-D2[-ii,]
}else{
ii <- which(D2$year>=2011 & D2$Treatment=="No_grass")
D2$W.HECO[ii] <- 0 ; D2$W.POSE[ii] <- 0 ; D2$W.PSSP[ii] <- 0
ii <- which(D2$Treatment=="No_shrub")
D2<-D2[-ii,]
}
D2$area <- exp(D2$logarea)
D2$doSpp <- doSpp
D2 <- subset(D2,year>2010)
plants <- rbind(plants,D2)
# read in scaled residuals
tmp <- read.csv(paste0("growth/",doSpp,"_scaled_residuals.csv"),header=T)
scaledResiduals[[i]] <- tmp$x
}
# get quadrat group and treatment
quad.info <- unique(plants[,c("quad","Group","Treatment")],MARGIN=2)
# merge in quad codes
tmp<-data.frame(Group=c("E1","P1","P10E1","P1E1","P2","P7E1"),GroupCode=c(1:6))
quad.info <- merge(quad.info,tmp)
# add GroupCode to plants data frame too
plants <- merge(plants,tmp)
# aggregate to quadrat and year
cov.obs <- aggregate(plants$area,by=list(species=plants$doSpp,quad=plants$quad,year=plants$year),FUN=sum)
names(cov.obs)[4] <- "obs"
cov.obs$obs <- cov.obs$obs/100 # convert to % cover
cov.obs <- reshape(cov.obs,idvar=c("quad","year"),direction="wide",timevar="species")
cov.obs[is.na(cov.obs)] <- 0
cov.obs <- cov.obs[,c(1,2,6,3,4,5)] # reorder columns
# get 2016 quadrat cover totals (these are not in the survival data file)
tmp <- read.csv("QuadYearCover.csv")
tmp <- subset(tmp, year==2016)
# set removed spp to zero
tmp$cover[tmp$species=="Artemisia tripartita" & tmp$Treatment=="No_shrub"] <- 0
tmp$cover[tmp$species!="Artemisia tripartita" & tmp$Treatment=="No_grass"] <- 0
tmp <- tmp[,c("quad","year","species","cover")] # drop Treatment and Group columns
tmp <- reshape(tmp, idvar=c("quad","year"),timevar="species",direction="wide")
names(tmp) <- names(cov.obs)
cov.obs <-rbind(cov.obs,tmp)
# GET PREDICTIONS -------------------------------------------------------
plants <- merge(plants,obs.plant.size,all.x=T)
View(plants)
head(plants)
source('C:/Repos/ExperimentTests/removals/ibm/ibm_removal_1step.r')
w
keep<-which(!is.na(plants$area.t1))
plot(plants$area.pred.trt,plants$area.t1)
figName <- ifelse(max.CI==F,"obsVpred_plants.png","obsVpred_plants_maxCI.png" )
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
i=1
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
control=cbind(plants[plants$Treatment=="Control",c("area.pred")],plants[plants$Treatment=="Control",c("area.t1")])
control
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
control=cbind(plants[plants$Treatment=="Control",c("area.pred")],plants[plants$Treatment=="Control",c("area.t1")])
removal.base=cbind(plants[plants$Treatment==myTrt,c("area.pred")],plants[plants$Treatment==myTrt,c("area.t1")])
removal.trt=cbind(plants[plants$Treatment==myTrt,c("area.pred.trt")],plants[plants$Treatment==myTrt,c("area.t1")])
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppNames[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
control=cbind(plants[plants$Treatment=="Control",c("area.pred")],plants[plants$Treatment=="Control",c("area.t1")])
removal.base=cbind(plants[plants$Treatment==myTrt,c("area.pred")],plants[plants$Treatment==myTrt,c("area.t1")])
removal.trt=cbind(plants[plants$Treatment==myTrt,c("area.pred.trt")],plants[plants$Treatment==myTrt,c("area.t1")])
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
# make figure
figName <- ifelse(max.CI==F,"obsVpred_plants.png","obsVpred_plants_maxCI.png" )
png(figName,height=7,width=7,units="in",res=450)
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
control=cbind(plants[plants$Treatment=="Control",c("area.pred")],plants[plants$Treatment=="Control",c("area.t1")])
removal.base=cbind(plants[plants$Treatment==myTrt,c("area.pred")],plants[plants$Treatment==myTrt,c("area.t1")])
removal.trt=cbind(plants[plants$Treatment==myTrt,c("area.pred.trt")],plants[plants$Treatment==myTrt,c("area.t1")])
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
dev.off()
source('C:/Repos/ExperimentTests/removals/ibm/ibm_removal_1step.r')
# make figure
figName <- ifelse(max.CI==F,"obsVpred_plants.png","obsVpred_plants_maxCI.png" )
png(figName,height=7,width=7,units="in",res=450)
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
pwr=0.5
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
control=cbind(plants[plants$Treatment=="Control",c("area.pred")]^pwr,plants[plants$Treatment=="Control",c("area.t1")]^pwr)
removal.base=cbind(plants[plants$Treatment==myTrt,c("area.pred")]^pwr,plants[plants$Treatment==myTrt,c("area.t1")]^pwr)
removal.trt=cbind(plants[plants$Treatment==myTrt,c("area.pred.trt")]^pwr,plants[plants$Treatment==myTrt,c("area.t1")]^pwr)
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("sqrt Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("sqrt Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
dev.off()
sum(plants$species=="HECO" & plants$Treatment=="No_shrub")
i=2
# make figure
figName <- ifelse(max.CI==F,"obsVpred_plants.png","obsVpred_plants_maxCI.png" )
png(figName,height=7,width=7,units="in",res=450)
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
pwr=0.5
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
tmpD<-subset(plants,species==sppList[i])
control=cbind(tmpD[tmpD$Treatment=="Control",c("area.pred")]^pwr,tmpD[tmpD$Treatment=="Control",c("area.t1")]^pwr)
removal.base=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
removal.trt=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred.trt")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("sqrt Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("sqrt Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
dev.off()
getwd()
i=1
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
tmpD<-subset(plants,species==sppList[i])
control=cbind(tmpD[tmpD$Treatment=="Control",c("area.pred")]^pwr,tmpD[tmpD$Treatment=="Control",c("area.t1")]^pwr)
removal.base=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
removal.trt=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred.trt")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
dim(removal.base)
points(removal.trt,pch=1,col="red")
i==2
i=2
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
tmpD<-subset(plants,species==sppList[i])
control=cbind(tmpD[tmpD$Treatment=="Control",c("area.pred")]^pwr,tmpD[tmpD$Treatment=="Control",c("area.t1")]^pwr)
removal.base=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
removal.trt=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred.trt")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
dim(removal.trt)
# merge
plants <- merge(plants,obs.plant.size,all.x=T)
# make figure
figName <- ifelse(max.CI==F,"obsVpred_plants.png","obsVpred_plants_maxCI.png" )
png(figName,height=7,width=7,units="in",res=450)
par(mfrow=c(2,2),tcl=-0.2,mgp=c(2,0.5,0),mar=c(2,2,2,1),oma=c(2,2,0,0))
pwr=0.5
for(i in 1:4){
if(i==1) {myTrt="No_grass"}else{myTrt="No_shrub"}
tmpD<-subset(plants,species==sppList[i])
control=cbind(tmpD[tmpD$Treatment=="Control",c("area.pred")]^pwr,tmpD[tmpD$Treatment=="Control",c("area.t1")]^pwr)
removal.base=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
removal.trt=cbind(tmpD[tmpD$Treatment==myTrt,c("area.pred.trt")]^pwr,tmpD[tmpD$Treatment==myTrt,c("area.t1")]^pwr)
maxCov=1.05*max(c(control,removal.base,removal.trt),na.rm=T)
plot(control,ylim=c(0,maxCov),xlim=c(0,maxCov),xlab="",ylab="")
title(sppList[i],font.main=4)
abline(0,1,lty="dashed")
points(removal.base,pch=1,col="blue2")
points(removal.trt,pch=1,col="red")
abline(lm(control[,2]~0+control[,1]),col="black")
abline(lm(removal.base[,2]~0+removal.base[,1]),col="blue2")
abline(lm(removal.trt[,2]~0+removal.trt[,1]),col="red")
if(i==1){
legend("topleft",c("Control","Removal (baseline)","Removal (treatment)"),pch=1,
col=c("black","blue2","red"),lty="solid",bty="n")
}
}
mtext("sqrt Observed cover (%)",2,outer=T,line=0.5,cex=1.2)
mtext("sqrt Predicted cover (%)",1,outer=T,line=0.5,cex=1.2)
dev.off()
getwd()
source('C:/Repos/ExperimentTests/removals/ibm/ibm_removal_1step.r')
source('C:/Repos/ExperimentTests/removals/ibm/ibm_removal_1step.r')
